name: Build frontend image and push to image repo
# fixme build all images, maybe look into https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs
on:
  push:
    branches:
      - main
  pull_request:
    branches: [ main ]

  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/frontend

jobs:
  build-and-push-image:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to the Container registry
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: paulhatch/semantic-version@v5.3.0
        id: semantic-version
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR-FRONTEND)"
          major_regexp_flags: ""
          minor_pattern: "(MINOR-FRONTEND)"
          minor_regexp_flags: ""
          version_format: "${major}.${minor}.${patch}-prerelease${increment}"
          change_path: "./frontend"
          namespace: frontend

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha
            type=raw, value=${{ steps.semantic-version.outputs.version }}

      - name: Build an image from Dockerfile
        run: |
          REPOSITORY_LOWER=$(echo "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_TAG=${{ github.sha }}
          docker build -t $REPOSITORY_LOWER:$IMAGE_TAG -f frontend/Dockerfile frontend

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}'
          #format: 'sarif'
          format: 'table'
          output: 'stdout'

      - name: Scan the image and upload dependency results
        uses: anchore/sbom-action@bb716408e75840bbb01e839347cd213767269d4a
        with:
          image: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}'
          artifact-name: image.spdx.json
          dependency-snapshot: true
          
      - name: Push the image if scan passes
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} 
