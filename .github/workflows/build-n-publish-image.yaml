name: Build backend image and push to image repo
# fixme build all images, maybe look into https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/backend

jobs:
  build-and-push-image:
    strategy:
      matrix:
        component: [ backend, frontend ]
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Login to the Container registry
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20
        with:
          registry: ${{ env.REGISTRY}}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: paulhatch/semantic-version@v5.3.0
        id: semantic-version
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR-${{ matrix.component }})"
          minor_pattern: "(MINOR-${{ matrix.component }})"
          change_path: "${{ matrix.component }}"
          version_format: "v${major}.${minor}.${patch}+${increment}"
          namespace: ${{ matrix.component }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.1
        if: github.ref == 'refs/heads/main'
        with:
          images: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha
            type=raw, value=${{ steps.semantic-version.outputs.version }}

      - name: Build and push Docker image
        id: docker-build
        uses: docker/build-push-action@v5.3.0
        if: github.ref == 'refs/heads/main'
        with:
          context: ./${{ matrix.component }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
         image-ref: '${{ steps.docker-build.outputs.imageid }}'
         #format: 'sarif'
         format: 'table'
         output: 'stdout'
         #output: 'trivy-results.sarif'
