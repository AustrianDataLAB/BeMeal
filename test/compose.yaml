services:
  backend:
    container_name: backend
    build:
      context: ../backend
      dockerfile: Dockerfile
    entrypoint: [ "java",  "-jar", "-Dspring.profiles.active=container,SmallDataGenerator", "/opt/app/*.jar" ]
    ports:
      - "8081:8081"
    healthcheck:
      test: [ "CMD-SHELL", "wget -qO- http://backend:8081/actuator/health/readiness | grep UP || exit 1" ]
      retries: 3
      start_period: 15s
      start_interval: 5s
    depends_on:
      neo4j:
        condition: service_healthy
  frontend:
    container_name: frontend
    build:
      context: ../frontend
      dockerfile: Dockerfile
    environment:
      BACKEND_URL: http://backend:8081/api/v1
    ports:
      - "8080:8080"
  neo4j:
    container_name: neo4j
    build:
      context: ../backend/database/neo4j
      dockerfile: Dockerfile
    hostname: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j-data:/data
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc", "apoc-extended"]
    healthcheck:
      test: "if [ $(ps -o etime= -p 1 | awk -F: '{if (NF==2) {print $1} else {print ($1*60)+$2}}') -lt 120 ]; then exit 1; else exit 0; fi"
      retries: 20
      start_period: 120s
      start_interval: 5s
  playwright:
    container_name: playwright
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./tests:/app
    depends_on:
      backend:
        condition: service_healthy

volumes:
  neo4j-data:
